`timescale 1ns / 1ps

module top_tb ;

    reg clk;
    reg rst_n;
    reg [7:0] data_in;
    wire [3:0] decision;
    wire finish;

    // Instantiate DUT
    top dut (
        .clk(clk),
        .rst_n(rst_n),
        .data_in(data_in),
        .decision(decision),
        .finish(finish)
    );

    // Clock generation
    initial clk = 0;
    always #5 clk = ~clk; // 100MHz clock

    // Memory to hold pixel values
    reg [7:0] img_mem [0:783];
    integer i;

    initial begin
        // Load image (change filename to test other digits)
        $readmemh("img0.mem", img_mem);

        // Reset
        rst_n = 0;
        data_in = 0;
        #20;
        rst_n = 1;

        // Send 784 pixels
        i = 0;
        while (i < 784) begin
            @(posedge clk);
            data_in <= img_mem[i];
            i = i + 1;
        end

        // Wait for finish signal
        wait(finish);
        $display("Prediction result: %d", decision);

        // End simulation
        #20;
        $stop;
    end

endmodule
